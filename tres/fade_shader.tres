[gd_resource type="ShaderMaterial" load_steps=11 format=2]

[ext_resource path="res://tres/fade_noise.tres" type="Texture" id=1]


[sub_resource type="VisualShaderNodeInput" id=1]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=2]
output_port_for_preview = 0
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=5]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=6]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeScalarOp" id=7]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShader" id=9]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_5;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out2p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// Input:3
	float n_out3p0 = TIME;

// ScalarFunc:4
	float n_out4p0 = sin(n_out3p0);

// ScalarOp:6
	float n_in6p1 = 2.00000;
	float n_out6p0 = n_out4p0 / n_in6p1;

// ScalarOp:7
	float n_in7p1 = 0.50000;
	float n_out7p0 = n_out6p0 + n_in7p1;

// ScalarOp:8
	float n_out8p0 = dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)) - n_out7p0;

// ScalarFunc:9
	float n_out9p0 = round(n_out8p0);

// Output:0
	ALPHA = n_out9p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -170.46, -95.5 )
nodes/fragment/0/position = Vector2( 1980, -200 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 540, -220 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 120, 80 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 320, 80 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 880, -240 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 580, 60 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( 780, 60 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 1100, -120 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( 1420, -140 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 6, 0, 6, 0, 7, 0, 2, 0, 5, 0, 5, 0, 8, 0, 7, 0, 8, 1, 8, 0, 9, 0, 9, 0, 0, 1 )

[resource]
render_priority = 1
shader = SubResource( 9 )
